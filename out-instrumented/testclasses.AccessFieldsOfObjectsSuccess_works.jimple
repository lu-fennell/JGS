public class testclasses.AccessFieldsOfObjectsSuccess extends java.lang.Object
{

    public void <init>()
    {
        testclasses.AccessFieldsOfObjectsSuccess r0;
        analyzer.level2.HandleStmt hs;
        java.lang.String[] local_for_String_Arrays;

        r0 := @this: testclasses.AccessFieldsOfObjectsSuccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void addObjectToObjectMap(java.lang.Object)>(r0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0, local_for_String_Arrays;
        java.lang.String r2;
        testclasses.utils.SimpleObject $r3;
        java.io.PrintStream $r4;
        analyzer.level2.HandleStmt hs;

        r0 := @parameter0: java.lang.String[];

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        staticinvoke <analyzer.level2.HandleStmt: void init()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>("testclasses.utils.SimpleObject_$r3");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("testclasses.utils.SimpleObject_$r3");

        $r3 = new testclasses.utils.SimpleObject;

        specialinvoke $r3.<testclasses.utils.SimpleObject: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void pushInstanceLevelToGlobalPC(java.lang.String)>("testclasses.utils.SimpleObject_$r3");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkGlobalPC(java.lang.Object,java.lang.String)>($r3, "<testclasses.utils.SimpleObject: java.lang.String field>");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLevelOfField(java.lang.Object,java.lang.String)>($r3, "<testclasses.utils.SimpleObject: java.lang.String field>");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object popGlobalPC()>();

        $r3.<testclasses.utils.SimpleObject: java.lang.String field> = "New field value";

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfFieldAndAssignmentLevel(java.lang.Object,java.lang.String)>($r3, "<testclasses.utils.SimpleObject: java.lang.String field>");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>("testclasses.utils.SimpleObject_$r3");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>("java.lang.String_r2");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("java.lang.String_r2");

        r2 = $r3.<testclasses.utils.SimpleObject: java.lang.String field>;

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfFieldAndAssignmentLevel(java.lang.Object,java.lang.String)>(class "java/lang/System", "<java.lang.System: java.io.PrintStream out>");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkLocalPC(java.lang.String)>("java.io.PrintStream_$r4");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("java.io.PrintStream_$r4");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkThatPCLe(java.lang.String)>("LOW");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkThatLe(java.lang.String,java.lang.String)>("java.lang.String_r2", "LOW");

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r2);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }
}
