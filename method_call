public class demo.Demo1 extends java.lang.Object
{
    static int highField;
    static int lowField;

    public void <init>()
    {
        demo.Demo1 r0;
        analyzer.level2.HandleStmt hs;
        java.lang.String[] local_for_String_Arrays;

        r0 := @this: demo.Demo1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void addObjectToObjectMap(java.lang.Object)>(r0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0, local_for_String_Arrays;
        int i0, $i1;
        java.lang.Integer $r1, $r3;
        java.lang.Object $r2;
        java.lang.String $r4;
        analyzer.level2.HandleStmt hs;

        r0 := @parameter0: java.lang.String[];

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        staticinvoke <analyzer.level2.HandleStmt: void init()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("java.lang.Object_$r2");

        $r2 = staticinvoke <de.unifreiburg.cs.proglang.jgs.support.DynamicLabel: java.lang.Object makeHigh(java.lang.Object)>($r1);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void setLocalFromString(java.lang.String,java.lang.String)>("java.lang.Object_$r2", "HIGH");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>("java.lang.Object_$r2");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("java.lang.Integer_$r3");

        $r3 = (java.lang.Integer) $r2;

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>("java.lang.Integer_$r3");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("int_$i1");

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "int_$i1";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void storeArgumentLevels(java.lang.String[])>(local_for_String_Arrays);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>("int_$i1");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("int_i0");

        i0 = staticinvoke <demo.Demo1: int 'ret'(int)>($i1);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void setReturnLevelAfterInvokeStmt(java.lang.String)>("int_i0");

        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "int_i0";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void storeArgumentLevels(java.lang.String[])>(local_for_String_Arrays);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object joinLevelOfLocalAndAssignmentLevel(java.lang.String)>("int_i0");

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("java.lang.String_$r4");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void setReturnLevelAfterInvokeStmt(java.lang.String)>("java.lang.String_$r4");

        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "java.lang.String_$r4";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void storeArgumentLevels(java.lang.String[])>(local_for_String_Arrays);

        staticinvoke <de.unifreiburg.cs.proglang.jgs.support.IOUtils: void printSecret(java.lang.String)>($r4);

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return;
    }

    public int multIfs(int)
    {
        demo.Demo1 r0;
        int i0;
        byte b1;
        analyzer.level2.HandleStmt hs;
        java.lang.String[] local_for_String_Arrays;

        r0 := @this: demo.Demo1;

        i0 := @parameter0: int;

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object assignArgumentToLocal(int,java.lang.String)>(0, "int_i0");

        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "int_i0";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkCondition(java.lang.String,java.lang.String[])>("1", local_for_String_Arrays);

        if i0 >= 0 goto label1;

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkNonSensitiveLocalPC()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("byte_b1");

        b1 = 0;

        goto label4;

     label1:
        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "int_i0";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkCondition(java.lang.String,java.lang.String[])>("1", local_for_String_Arrays);

        if i0 >= 2 goto label2;

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkNonSensitiveLocalPC()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("byte_b1");

        b1 = 2;

        goto label4;

     label2:
        local_for_String_Arrays = newarray (java.lang.String)[1];

        local_for_String_Arrays[0] = "int_i0";

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkCondition(java.lang.String,java.lang.String[])>("1", local_for_String_Arrays);

        if i0 >= 4 goto label3;

        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkNonSensitiveLocalPC()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("byte_b1");

        b1 = 4;

        goto label4;

     label3:
        virtualinvoke hs.<analyzer.level2.HandleStmt: void checkNonSensitiveLocalPC()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object setLocalToCurrentAssingmentLevel(java.lang.String)>("byte_b1");

        b1 = 6;

     label4:
        virtualinvoke hs.<analyzer.level2.HandleStmt: void exitInnerScope(java.lang.String)>("1");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void returnLocal(java.lang.String)>("byte_b1");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return b1;
    }

    public static int 'ret'(int)
    {
        int i0;
        analyzer.level2.HandleStmt hs;
        java.lang.String[] local_for_String_Arrays;

        i0 := @parameter0: int;

        hs = new analyzer.level2.HandleStmt;

        specialinvoke hs.<analyzer.level2.HandleStmt: void <init>()>();

        virtualinvoke hs.<analyzer.level2.HandleStmt: void initHandleStmtUtils(boolean,int)>(false, 0);

        virtualinvoke hs.<analyzer.level2.HandleStmt: java.lang.Object assignArgumentToLocal(int,java.lang.String)>(0, "int_i0");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void returnLocal(java.lang.String)>("int_i0");

        virtualinvoke hs.<analyzer.level2.HandleStmt: void close()>();

        return i0;
    }
}
